{"version":3,"sources":["Components/Friends/Friends.js","Components/Settings/AudioSettingsModal.js","Components/Settings/Settings.js","Components/InputField/Input.js","Components/ChatWindow/ChatWindow.js","Components/Welcome/Login.js","Components/Welcome/Register.js","Components/Welcome/WelcomePage.js","App.js","serviceWorker.js","index.js","lol.mp3"],"names":["Friends","friends","clickFriend","map","friend","index","onClick","key","className","letter","name","charAt","justify","ellipsis","msg","length","message","AudioSettingsModal","show","handleClose","updateAudio","useState","value","setValue","Modal","onHide","Header","closeButton","Title","Body","ToggleButtonGroup","type","onChange","val","ToggleButton","variant","SettingsList","Settings","seen","modal","setModal","Dropdown","Toggle","size","id","xmlns","width","height","viewBox","d","fill","Menu","Item","Input","onSendClick","showEmoji","emojiSeen","input","inputChange","onSend","event","target","console","log","align","fit","verticalAlign","ChatWindow","chatData","ClassName","showSenderName","messages","Login","signIn","email","setEmail","password","setPassword","validateForm","Card","onSubmit","preventDefault","FormGroup","controlId","FormLabel","FormControl","autoFocus","e","href","Button","block","disabled","Register","registerUser","setName","username","WelcomePage","Navbar","bg","expand","Brand","aria-controls","Collapse","Nav","Link","path","src","alt","App","Message","senderName","feed","updateFeed","chat","setChat","signedIn","setSignInStatus","setUser","setHubConnection","useEffect","a","async","hubConnect","HubConnectionBuilder","withUrl","build","start","alert","createHubConnection","face_mp3","preload","loop","enable","document","getElementsByTagName","play","pause","msgText","prevState","updatedChat","Object","assign","push","fetch","method","headers","body","JSON","stringify","then","res","json","catch","err","creditentials","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.5d93249e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Friends.css'\r\nimport {ThemeProvider,Avatar,Row,ChatList,ChatListItem,Column,Title,Subtitle}\r\n    from '@livechat/ui-kit'\r\n\r\nfunction Friends({friends,clickFriend}) {\r\n    return (\r\n        <ThemeProvider>\r\n            <ChatList>\r\n            {friends.map((friend,index) =>(\r\n                <div onClick={()=>clickFriend(index)} key = {index} >\r\n                    <ChatListItem className = {'friend'} >\r\n                        <Avatar letter= {friend.name.charAt(0)} />\r\n                        <Column>\r\n                            <Row justify>\r\n                                <Title ellipsis>{friend.name}</Title>\r\n                            </Row>\r\n                            <Subtitle ellipsis>{friend.msg[friend.msg.length-1].message}</Subtitle>\r\n                        </Column>\r\n                    </ChatListItem>\r\n                </div>\r\n            ) )}\r\n            </ChatList>\r\n        </ThemeProvider>\r\n    );\r\n}\r\nexport default Friends;","import React,{useState} from 'react';\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport ToggleButtonGroup from \"react-bootstrap/ToggleButtonGroup\";\r\nimport ToggleButton from \"react-bootstrap/ToggleButton\";\r\n\r\n\r\n\r\nfunction AudioSettingsModal({show,handleClose,updateAudio}) {\r\n    const [value, setValue] = useState(0);\r\n    const handleChange = (val) => {\r\n        setValue(val);\r\n        val === 1? updateAudio(true) : updateAudio(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n        <Modal show={show} onHide={handleClose}>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Audio settings</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <h4> EarGasm </h4>\r\n                    <ToggleButtonGroup type=\"radio\" name=\"options\" value={value} onChange={handleChange}>\r\n                        <ToggleButton value={1}>On</ToggleButton>\r\n                        <ToggleButton variant ={'secondary'}  value={2}>Off</ToggleButton>\r\n                    </ToggleButtonGroup>\r\n            </Modal.Body>\r\n        </Modal>\r\n        </>\r\n    );\r\n}\r\nexport default AudioSettingsModal;","import React,{useState} from 'react';\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport AudioSettingsModal from \"./AudioSettingsModal\";\r\n\r\nconst SettingsList = ['Audio'];\r\n\r\n\r\nfunction Settings({updateAudio}) {\r\n    const [modal, setModal] = useState({type:'',seen:false});\r\n\r\n    const handleClose = () => setModal({type:'',seen:false});\r\n    const handleShow = (type) => setModal({type:type,seen:true});\r\n\r\n    return (\r\n        <>\r\n        <Dropdown>\r\n            <Dropdown.Toggle variant=\"secondary\" size={'sm'} id=\"dropdown-basic\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path d=\"M0 0h24v24H0z\" fill=\"none\"/>\r\n                <path d=\"M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z\"/>\r\n                </svg>\r\n            </Dropdown.Toggle>\r\n            <Dropdown.Menu>\r\n                    <Dropdown.Item onClick = {()=>handleShow(SettingsList[0])} >{SettingsList[0]}</Dropdown.Item>\r\n                <Dropdown.Item >{SettingsList[1]}</Dropdown.Item>\r\n            </Dropdown.Menu>\r\n        </Dropdown>\r\n            {modal.type === 'Audio'\r\n                ? <AudioSettingsModal show = {modal.seen} handleClose = {handleClose} updateAudio={updateAudio}/>\r\n                :<div/>\r\n            }\r\n\r\n           </>\r\n\r\n    );\r\n}\r\nexport default Settings;","import React,{useState,Suspense} from 'react';\r\nimport {ThemeProvider,TextComposer,Row,IconButton,AddIcon,TextInput,EmojiIcon,SendButton}\r\n    from '@livechat/ui-kit';\r\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\r\nimport Popover from \"react-bootstrap/Popover\";\r\nimport Picker from 'emoji-picker-react';\r\n\r\n\r\nfunction Input({onSendClick,showEmoji,emojiSeen}) {\r\n    const[input,inputChange] = useState('');\r\n    const [chosenEmoji, setChosenEmoji] = useState(null);\r\n\r\n    const updField = (event) =>{\r\n        if(event.type === 'change'){\r\n            inputChange(event.target.value);\r\n        }\r\n      console.log(input)\r\n    };\r\n\r\n    const onEmojiClick = (event, emojiObject) => {\r\n        if(emojiObject){\r\n             inputChange(prevState => prevState + emojiObject.emoji)\r\n        }\r\n\r\n    };\r\n    return (\r\n        <>\r\n\r\n        <ThemeProvider>\r\n            <TextComposer onSend={()=>onSendClick(input)} onChange={updField}>\r\n                <Row align=\"center\">\r\n                    <IconButton fit>\r\n                        <AddIcon />\r\n                    </IconButton>\r\n                    <TextInput fill = 'true'  />\r\n                    <SendButton fit />\r\n                </Row>\r\n\r\n                <Row verticalAlign=\"center\" justify=\"left\">\r\n                    <IconButton fit>\r\n                            <EmojiIcon onClick = {()=>showEmoji(!emojiSeen)}/>\r\n                    </IconButton>\r\n                </Row>\r\n            </TextComposer>\r\n        </ThemeProvider>\r\n            </>\r\n    );\r\n}\r\nexport default Input;","import React, {useState} from 'react';\r\nimport Input from \"../InputField/Input\";\r\nimport './Chat.css';\r\nimport { ChatFeed } from 'react-chat-ui'\r\nimport Picker from \"emoji-picker-react\";\r\n\r\n\r\n\r\nfunction ChatWindow({chatData,onSend}) {\r\n    const [emojiSeen,showEmoji] = useState(false);\r\n\r\n    return (\r\n\r\n        <div>\r\n            <ChatFeed\r\n                ClassName ={'feed'}\r\n                showSenderName\r\n                messages = {chatData.msg}\r\n\r\n            />\r\n            {/*emojiSeen\r\n                ?<Picker/>\r\n                : <></>\r\n            */}\r\n            <footer className={'footer'}>\r\n                <Input onSendClick={onSend} showEmoji={showEmoji} emojiSeen={emojiSeen}/>\r\n            </footer>\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\nexport default ChatWindow;","import React, { useState } from \"react\";\r\nimport { Button, FormGroup, FormControl } from \"react-bootstrap\";\r\nimport './Login.css';\r\nimport FormLabel from \"react-bootstrap/FormLabel\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nexport default function Login({signIn}) {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    function validateForm() {\r\n        return email.length > 0 && password.length > 0;\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        signIn(email,password);\r\n    }\r\n\r\n    return (\r\n        <Card className=\"Login\">\r\n            <Card.Header> Sign In </Card.Header>\r\n            <Card.Body>\r\n            <form onSubmit={handleSubmit}>\r\n                <FormGroup controlId=\"email\">\r\n                    <FormLabel>Email</FormLabel>\r\n                    <FormControl\r\n                        autoFocus\r\n                        type=\"email\"\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup controlId=\"password\">\r\n                    <FormLabel>Password</FormLabel>\r\n                    <FormControl\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                        type=\"password\"\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup className = 'tc'>\r\n                    <a className='tc' href={'/register'}>Not signed up yet?</a>\r\n                </FormGroup>\r\n                <Button block variant= {!validateForm()?'secondary':\"primary\"} disabled={!validateForm()} type=\"submit\">\r\n                    Login\r\n                </Button>\r\n            </form>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Button, FormGroup, FormControl } from \"react-bootstrap\";\r\nimport './Login.css';\r\nimport FormLabel from \"react-bootstrap/FormLabel\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nexport default function Register({registerUser}) {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    function validateForm() {\r\n        return email.length > 0 && password.length > 0 && name.length;\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        registerUser({\r\n            username:name,\r\n            email:email,\r\n            password:password\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <Card className=\"Login\">\r\n            <Card.Header> Register </Card.Header>\r\n            <Card.Body>\r\n                <form onSubmit={handleSubmit}>\r\n                    <FormGroup controlId='name'>\r\n                        <FormLabel>Name</FormLabel>\r\n                        <FormControl\r\n                            autoFocus\r\n                            type=\"text\"\r\n                            value={name}\r\n                            onChange={e => setName(e.target.value)}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup controlId=\"email\">\r\n                        <FormLabel>Email</FormLabel>\r\n                        <FormControl\r\n                            autoFocus\r\n                            type=\"email\"\r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup controlId=\"password\">\r\n                        <FormLabel>Password</FormLabel>\r\n                        <FormControl\r\n                            value={password}\r\n                            onChange={e => setPassword(e.target.value)}\r\n                            type=\"password\"\r\n                        />\r\n                    </FormGroup>\r\n                    <Button block variant= {!validateForm()?'secondary':\"primary\"} disabled={!validateForm()} type=\"submit\">\r\n                        Register\r\n                    </Button>\r\n                </form>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}","import React,{useState} from 'react';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Login from \"./Login\";\r\nimport Register from \"./Register\";\r\nimport './welcome.css';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction WelcomePage({signIn,registerUser}) {\r\n\r\n    return (\r\n        <div >\r\n            <Router className = {'rocket'}>\r\n                <Navbar bg=\"dark\" variant={'dark'} expand=\"lg\">\r\n                    <Navbar.Brand >Rocket-Chat</Navbar.Brand>\r\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                        <Nav className=\"mr-auto\">\r\n                            <Nav.Link href = {'/login'}>Sign in</Nav.Link>\r\n                            <Nav.Link href = {'/register'}>Register</Nav.Link>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                <Switch>\r\n                    <Route path=\"/login\">\r\n                        <Login signIn={signIn}/>\r\n                    </Route>\r\n                    <Route path=\"/register\">\r\n                        <Register registerUser={registerUser} />\r\n                    </Route>\r\n                    <Route path=\"/\">\r\n                        <Login signIn={signIn}/>\r\n                    </Route>\r\n                    <Route>\r\n                        <div className='tc pa3'>\r\n                            <h3>Sorry, page not found!</h3>\r\n                        </div>\r\n                    </Route>\r\n                </Switch>\r\n            </Router>\r\n            <img src={'https://dramarocket.com/wp-content/uploads/2018/01/icon-redrocket-2.png'} alt={'logo'} className={'center'}/>\r\n            </div>\r\n    );\r\n}\r\nexport default WelcomePage;","import React,{useState,useEffect} from 'react';\r\nimport Friends from \"./Components/Friends/Friends\";\r\nimport Settings from \"./Components/Settings/Settings\";\r\nimport ChatWindow from './Components/ChatWindow/ChatWindow'\r\nimport {Message} from 'react-chat-ui';\r\nimport face_mp3 from './lol.mp3';\r\nimport './App.css';\r\nimport { HubConnection, HubConnectionBuilder } from '@aspnet/signalr';\r\nimport WelcomePage from \"./Components/Welcome/WelcomePage\";\r\n\r\n\r\nfunction App() {\r\n    const [feed,updateFeed] = useState([{name:'John',msg:[new Message({id:0,message:'lol'}),new Message({id:1,message:'lol!',senderName:'John'})]},\r\n        {name:'Donn',msg:[new Message({id:0,message:'lol'}),new Message({id:1,message:'KEK!',senderName:'Donn'})]}]);\r\n\r\n    const[chat,setChat] = useState(-1);\r\n    const[signedIn,setSignInStatus] = useState(false);\r\n    const[user,setUser] = useState(null);\r\n    const[hubConnection,setHubConnection] = useState(null);\r\n\r\n\r\n    // Set the Hub Connection on mount.\r\n    useEffect(() => {\r\n\r\n        // Set the initial SignalR Hub Connection.\r\n        const createHubConnection = async () => {\r\n\r\n            // Build new Hub Connection, url is currently hard coded.\r\n            const hubConnect = new HubConnectionBuilder()\r\n                .withUrl('https://localhost:5001/chat')\r\n                .build();\r\n            try {\r\n                await hubConnect.start();\r\n                console.log('Connection successful!')\r\n            }\r\n            catch (err) {\r\n                alert(err);\r\n            }\r\n            setHubConnection(hubConnect);\r\n        };\r\n\r\n        createHubConnection();\r\n    }, []);\r\n\r\n    const SendMessage = (msgText) => {\r\n        updateFeed(prevState => {\r\n            let updatedChat = Object.assign([],prevState[chat]);\r\n            updatedChat.msg.push(new Message({id:0,message:msgText}));\r\n          return Object.assign([],prevState,updatedChat);\r\n      })\r\n    };\r\n\r\n    const updAudio = (enable) => {\r\n        const a = document.getElementsByTagName(\"audio\")[0];\r\n        enable ? a.play() : a.pause();\r\n    };\r\n\r\n\r\n    const signIn = (email,password) => {\r\n      fetch('https://localhost:5001/api/login',{\r\n          method:'post',\r\n          headers:{'Content-type':'application/json'},\r\n          body: JSON.stringify({\r\n              email:email,\r\n              password:password\r\n          })\r\n        })\r\n          .then(res => res.json())\r\n          .then(res=> {\r\n              console.log(res[0]);\r\n              if(res){\r\n                  setSignInStatus(true);\r\n                  setUser(res[0]);\r\n              }\r\n          })\r\n          .catch(err=> console.log(err));\r\n    };\r\n    const registerUser = (creditentials) => {\r\n        fetch('https://localhost:5001/api/register',{\r\n            method:'post',\r\n            headers:{'Content-type':'application/json'},\r\n            body: JSON.stringify(creditentials)\r\n        })\r\n            .then(res =>res.json())\r\n            .then(res=> {\r\n                console.log(res[0]);\r\n                if(res){\r\n                    setSignInStatus(true);\r\n                    setUser(res[0]);\r\n                }\r\n            })\r\n            .catch(err=> console.log(err));\r\n    };\r\n\r\n    const loadChatData = () =>{\r\n\r\n    };\r\n    return (\r\n        <>\r\n            {\r\n                signedIn\r\n                    ? <div className=\"row\">\r\n                    <audio src={face_mp3} preload loop/>\r\n                    <div className='left-side col-4 col-sm-4 col-md-4 col-lg-2 col-xl-2'>\r\n                        <Settings updateAudio={updAudio}/>\r\n                        <div className={'left-content'}>\r\n                            <Friends friends={feed} clickFriend={setChat}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='right-side col-8 col-sm-8 col-md-8 col-lg-10 col-xl-10 '>\r\n                        <div>\r\n                            <div className=\"container\">\r\n                                <div className=\"row\">\r\n                                    {chat === -1\r\n                                        ? <div className='tc center col align-self-center'\r\n                                               id={'idle-msg'}>{'Chat is being developed,stay tuned.'}</div>\r\n                                        : <div className='col'><ChatWindow chatData={feed[chat]} onSend={SendMessage}/>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                    : <WelcomePage signIn={signIn} registerUser={registerUser}/>\r\n            }\r\n        </>\r\n  );\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport 'tachyons';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/lol.f8b7a2e4.mp3\";"],"sourceRoot":""}